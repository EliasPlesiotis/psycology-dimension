{"version":3,"sources":["home.js","config.js","questionnaire.js","services.js","login.js","register.js","unauthhome.js","accounts.js","stats.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","style","fontSize","React","Component","QuestionnaireURL","VariableURL","QuestionURL","Answer","props","state","questid","qid","location","answered","body","answer","ans","handleSubmit","bind","handleChange","fetch","then","resp","json","data","setState","questionnaire","this","e","method","headers","JSON","stringify","parse","localStorage","getItem","console","log","concat","_","history","push","pathname","id","preventDefault","target","value","onSubmit","onChange","type","Questionnaire","name","questions","width","padding","margin","textAlign","map","q","key","filter","i","length","to","path","component","replace","Questionnaires","questionnaires","search","age","gender","classes","setItem","Math","random","toString","substr","handleAge","handleGender","handleIdent","min","alt","src","desc","Auth","token","refreshValid","Object","keys","refreshToken","username","password","status","undefined","access","refresh","removeItem","User","user","pk","vid","variable","Login","isLogged","errors","handleUsername","handlePassword","validateToken","logged","event","login","getUserId","class","role","window","href","backgroundColor","position","top","left","transform","borderRadius","height","redirect","float","onClick","register","displayErrors","withRouter","Register","reload","color","UnauthHome","NewQuestionnare","redir","handleDesc","setQuestionnaires","NewVariable","erros","option","handleInput","handleSelect","getQuestionnaires","setVariables","NewQuestion","qoption","voption","variables","handleQSelect","handleVSelect","qop","getQuestionnaire","setQuestions","v","new_name","new_desc","delQuest","handleText","deleteQuestionnaire","updateQuestionnaire","Variable","qname","delVar","getVariable","deleteVariable","updateVariable","Question","new_body","vname","getQuestion","deleteQuestion","updateQuestion","Accounts","isLoaded","getVariables","getQuestions","paddingTop","marginLeft","quest","Stat","variablesId","from","genders","fromChange","toChange","genderChange","sum","count","answers","a","includes","isNaN","slice","mean","pow","options","selected","multiple","scope","getAnswers","getMean","getStd","Stats","varibles","App","logout","nav","exact","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.862922ae.chunk.js","sourcesContent":["import React from 'react'\r\nimport './home.css'\r\n\r\nexport default class Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <div className='home1'>\r\n                    <div className='jumbotron body3'>\r\n                        <div className='title'>\r\n                            <h1 style={{fontSize: '4vw'}}>Psycology Dimension</h1>\r\n                        </div>\r\n                        <br />\r\n                        <div className='text'>\r\n                            <p>\r\n                                a;sdlkfjasd;lf;lasjf;lsakjf;lsjfa;skjfsa;fja;skjf;sdlj\r\n                                fa;dsfjapofijwepofijw oiwjfwo jfoewjcpw jfqpweojfjw j\r\n                                qwpoejfwqeofjw;o jfjasdofj sapdoifjadsofj ;dskf jqwpi\r\n                                fjrhehga;sdjfa;sldjfa;lsdjfa;sdjf ;saldkf ja;sld ;lds \r\n                                ;ldjf ;lds fa;ldjfsa;lfj;lfjrhehg a;sdjfa;sldjfa;lsdj\r\n                                fa;sdjf ;saldkf ja;sld ;lds ;ldjf ;lds fa;ldjfsa;lfj;\r\n                                lfjrhehg a;sdjfa;sldjfa;lsdjfa;sdjf ;saldkf ja;sld ;l\r\n                                ds ;ld jf ;lds fa;ldjfsa;lfj;l\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","const LoginURL =         'https://psych-dim.glitch.me/api/token/'\r\nconst ValidateURL =      'https://psych-dim.glitch.me/api/token/valid/'\r\nconst RegisterURL =      'https://psych-dim.glitch.me/api/register/'\r\nconst RefreshURL =       'https://psych-dim.glitch.me/api/token/refresh/'\r\nconst QuestionnaireURL = 'https://psych-dim.glitch.me/api/questionnaire/'\r\nconst VariableURL =      'https://psych-dim.glitch.me/api/variable/'\r\nconst QuestionURL =      'https://psych-dim.glitch.me/api/question/'\r\nconst AnswerURL =        'https://psych-dim.glitch.me/api/question/answer/'\r\nconst UserIdURL =        'https://psych-dim.glitch.me/api/id/'\r\nconst SearchURL =        'https://psych-dim.glitch.me/api/questionnaire/search/'\r\n\r\nexport { \r\n    LoginURL, \r\n    RegisterURL, \r\n    RefreshURL, \r\n    QuestionnaireURL, \r\n    VariableURL, \r\n    QuestionURL, \r\n    AnswerURL, \r\n    UserIdURL,\r\n    ValidateURL,\r\n    SearchURL\r\n}","import React from 'react'\r\nimport { Link, Route, Switch } from 'react-router-dom'\r\n\r\nimport { QuestionnaireURL, QuestionURL, AnswerURL, SearchURL } from './config'\r\nimport './questionnaire.css'\r\n\r\n\r\nclass Answer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            questid: '',\r\n            qid: props.location.state.qid,\r\n            answered: props.location.state.answered,\r\n            body: '',\r\n            answer: 1,\r\n            ans: false\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        fetch(`${QuestionURL}${props.location.state.qid}/read`).then( resp => resp.json() )\r\n        .then( data => this.setState({body: data.body, questid: data.questionnaire}))\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${QuestionURL}${this.state.qid}/read`).then( resp => resp.json() )\r\n        .then( data => this.setState({body: data.body, questid: data.questionnaire}))\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        fetch(`${AnswerURL}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                'questionnaire': this.state.questid,\r\n                'question': this.state.qid,\r\n                'answer': this.state.answer,\r\n                'gender': JSON.parse(localStorage.getItem('gender')),\r\n                'age': JSON.parse(localStorage.getItem('age')),\r\n                'person': JSON.parse(localStorage.getItem('anonymousUser'))\r\n            })\r\n        }).then( resp => resp.json() ).then(data => console.log(data))\r\n        this.setState(state => {\r\n            const answer = state.answered.concat(state.qid)\r\n            return {\r\n                answered: answer,\r\n                ans: true\r\n            }\r\n        }, _ => {\r\n            this.props.history.push({pathname: '/questionnaires/quest', state: {id: this.state.questid, answered: this.state.answered}})\r\n        })\r\n        \r\n        e.preventDefault()\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({answer: e.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='answer'>\r\n                <h2 className='answer-title'>{this.state.body}</h2>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className='form-group answer-form' >\r\n                        <h2 className='form-title'>{this.state.body}</h2>\r\n                        <br />\r\n                        <select className='custom-select' value={this.state.answer} onChange={this.handleChange}>\r\n                            <option value='1'>1</option>\r\n                            <option value='2'>2</option>\r\n                            <option value='3'>3</option>\r\n                            <option value='4'>4</option>\r\n                            <option value='5'>5</option>\r\n                        </select>\r\n                        <br />\r\n                        <input className='btn btn-primary' type='submit' />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Questionnaire extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.location.state.id,\r\n            name: '',\r\n            questions: [],\r\n            answered: props.location.state.answered\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${QuestionnaireURL}${this.state.id}/read`).then( resp => resp.json() )\r\n        .then( data => this.setState({name: data.name, questions: data.questions, answered: []}))\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        fetch(`${QuestionnaireURL}${props.location.state.id}/read`).then( resp => resp.json() )\r\n        .then( data => this.setState({name: data.name, questions: data.questions, answered: props.location.state.answered}))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='card' style={{width: '60vw', padding: '3rem', margin: '4rem', textAlign: 'center'}}>\r\n                    <h3>{this.state.name}</h3>\r\n                    <hr />\r\n                    <br />\r\n                    <h5>Questions</h5>\r\n                    <br />\r\n                    <ul className='list-group'>\r\n                        {this.state.questions.map( q =>\r\n                        <li className='list-group-item' key={q.id}>\r\n                            <Link className={this.state.answered.filter( i => i === q.id).length !== 0 ? 'answerd' : ''} to={{pathname: '/questionnaires/quest/q', state: {qid: q.id, id: this.state.id, answered: this.state.answered}}}>{q.body}</Link>\r\n                        </li>\r\n                        )}\r\n                    </ul>\r\n                    <br />\r\n                    <br />\r\n                    <Switch>\r\n                        <Route path={`/questionnaires/quest/q`} component={Answer} replace />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class Questionnaires extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            questionnaires: [],\r\n            search: '',\r\n            age: 0,\r\n            gender: 'male',\r\n            classes: 'identify'\r\n        }\r\n\r\n        localStorage.setItem('anonymousUser', JSON.stringify(Math.random(0).toString(36).substr(2)))\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleAge = this.handleAge.bind(this)\r\n        this.handleGender = this.handleGender.bind(this)\r\n        this.handleIdent = this.handleIdent.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(QuestionnaireURL)\r\n        .then( resp => resp.json() )\r\n        .then( data => this.setState({questionnaires: data}))\r\n    }\r\n\r\n    handleAge(e) {\r\n        this.setState({age: e.target.value})\r\n    }\r\n\r\n    handleGender(e) {\r\n        console.log(e.target)\r\n        this.setState({gender: e.target.value})\r\n    }\r\n\r\n    handleIdent(e) {\r\n        localStorage.setItem('age', JSON.stringify(this.state.age))\r\n        localStorage.setItem('gender', JSON.stringify(this.state.gender))\r\n\r\n        this.setState({classes: 'identify remove'})\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({search: e.target.value})\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        fetch(`${SearchURL}?search=${this.state.search}`).then( resp => resp.json() )\r\n        .then( data => {\r\n            if (data.length !== 0) {\r\n                this.setState({questionnaires: data}) \r\n            } else {\r\n                fetch(QuestionnaireURL)\r\n                .then( resp => resp.json() )\r\n                .then( data => this.setState({questionnaires: data}))\r\n            }\r\n        })\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        const { questionnaires } = this.state\r\n        return (\r\n            <div className='questionnaires'>\r\n                <div className={`${this.state.classes}`}>\r\n                    <h3 className='text-center'>First of all answer some questions that will help the researchers !!!</h3>\r\n                    <br />\r\n                    <form onSubmit={this.handleIdent}>\r\n                        <div className='form-group form-ident'>\r\n                            <label>Age:</label>\r\n                            <input className='form-control' type='number' min='1' value={this.state.age} onChange={this.handleAge}/>\r\n                            <label>Gender:</label>\r\n                            <select className='custom-select' value={this.state.gender} onChange={this.handleGender}>\r\n                                <option value='male'>Male</option>\r\n                                <option value='female'>Female</option>\r\n                                <option value='other'>Other</option>\r\n                            </select>\r\n                            <input className='btn btn-primary' type='submit' />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className='quest-background'></div>\r\n                <div className='search'>\r\n                    <form onSubmit={this.handleSubmit} >\r\n                        <div className='form-group'>\r\n                            <input className='search-input' value={this.state.search} onChange={this.handleChange} type='text' />\r\n                            <button className='search-btn' type='submit'><img alt='Search' src=\"https://img.icons8.com/color/48/000000/search.png\"/></button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ul className='list-q'>\r\n                    {questionnaires.map(q => \r\n                        <li className='q' key={q.id}>\r\n                            <div className='questionnaire card-body text-center'>\r\n                                <h4 className='card-title'>{q.name}</h4>\r\n                                <p>{q.desc}</p>\r\n                                <button className='btn btn-primary card-btn'><Link to={{pathname: `/questionnaires/quest`, state: {id: q.id, answered: []}}} >Answer</Link></button>\r\n                            </div>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n                <div className='quests'>\r\n                    <Switch>\r\n                        <Route  path={'/questionnaires/quest'} component={Questionnaire} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import { QuestionnaireURL, VariableURL, LoginURL, RefreshURL, ValidateURL, QuestionURL, UserIdURL } from './config'\r\n\r\nclass Auth {\r\n    static async validateToken() {\r\n        let refreshValid\r\n        let resp\r\n        let data\r\n    \r\n        try {\r\n            resp = await fetch(ValidateURL, {\r\n                method: 'POST', \r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({token: JSON.parse(localStorage.getItem('refresh'))})\r\n            })\r\n            data = await resp.json()\r\n\r\n            refreshValid = Object.keys(data).length === 0\r\n        } catch { }\r\n\r\n        if (refreshValid) { \r\n            await this.refreshToken()\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    static async login(username, password) {\r\n        try {\r\n            let resp = await fetch(LoginURL, {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({username: username, password: password})\r\n            })\r\n\r\n            if ( resp.status !== 200 ) {\r\n                return false\r\n            }\r\n\r\n            let data = await resp.json()\r\n            if ( data === undefined ) { return false }\r\n\r\n            localStorage.setItem('access', JSON.stringify(data.access))\r\n            localStorage.setItem('refresh', JSON.stringify(data.refresh))\r\n        \r\n            return true\r\n        } catch {\r\n            return false\r\n        }\r\n    }\r\n\r\n    static async refreshToken() {\r\n        try {\r\n            let resp = await fetch(RefreshURL, {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({refresh: JSON.parse(localStorage.getItem('refresh'))})\r\n            })\r\n\r\n            let data = await resp.json()\r\n            if ( data === undefined ) { return false }\r\n            localStorage.setItem('access', JSON.stringify(data.access))\r\n            return true\r\n\r\n        } catch {\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n    static logout() {\r\n        localStorage.removeItem('access')\r\n        localStorage.removeItem('refresh')\r\n        localStorage.removeItem('id')\r\n        localStorage.removeItem('username')\r\n    }\r\n}\r\n\r\nclass User {\r\n    static async getUserId() {\r\n        fetch(UserIdURL, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            }\r\n        }).then( resp => resp.json() )\r\n        .then( data => {\r\n            localStorage.setItem('id', JSON.stringify(data.id))\r\n            localStorage.setItem('username', JSON.stringify(data.username))\r\n        })\r\n    }\r\n\r\n    static async getQuestionnaires() {\r\n        let resp = await fetch(QuestionnaireURL, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            }\r\n        })\r\n        let data = await resp.json()\r\n        return data\r\n    }\r\n\r\n    static async setQuestionnaires(name, desc) { \r\n        let resp = await fetch(QuestionnaireURL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                desc: desc,\r\n                user: JSON.parse(localStorage.getItem('id'))\r\n            })\r\n        })\r\n        let data = await resp.json()\r\n        return data\r\n    }\r\n\r\n    static async getQuestionnaire(pk) {\r\n        let resp = await fetch(`${QuestionnaireURL}${pk}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            }\r\n        })\r\n        let data = await resp.json()\r\n        return data\r\n    }\r\n\r\n    static async updateQuestionnaire(name, desc, pk) { \r\n        let resp = await fetch(`${QuestionnaireURL}${pk}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                desc: desc,\r\n                user: JSON.parse(localStorage.getItem('id'))\r\n            })\r\n        })\r\n\r\n        let data = await resp.json()\r\n        return data\r\n    }\r\n\r\n    static async deleteQuestionnaire(pk) { \r\n        let resp = await fetch(`${QuestionnaireURL}${pk}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            },\r\n        })\r\n\r\n        let data = await resp.json()\r\n        return data\r\n    }\r\n\r\n    static async getVariables() {\r\n        let resp = await fetch(VariableURL, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            }\r\n        })\r\n        let data = await resp.json()\r\n        return data\r\n    }\r\n\r\n    static async setVariables(name, qid) {\r\n        let resp = await fetch(VariableURL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                questionnaire: qid,\r\n                user: JSON.parse(localStorage.getItem('id'))\r\n            })\r\n        })\r\n        let data = await resp.json()\r\n        return data\r\n    }\r\n\r\n    static async getVariable(pk) { \r\n        let resp = await fetch(`${VariableURL}${pk}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            }\r\n        })\r\n        let data = await resp.json()\r\n        return data\r\n    }\r\n\r\n    static async updateVariable(name, vid, qid) {\r\n        let resp = await fetch(`${VariableURL}${vid}`,{\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                user: JSON.parse(localStorage.getItem('id')),\r\n                questionnaire: qid\r\n            })\r\n        })\r\n        let data = await resp.json()\r\n        return data\r\n    }\r\n\r\n    static async deleteVariable(pk) {\r\n        let resp = await fetch(`${VariableURL}${pk}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            }\r\n        })\r\n        let data = await resp.json()\r\n        return data\r\n    }\r\n \r\n    static async getQuestions() {\r\n        let resp = await fetch(QuestionURL, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            }\r\n        })\r\n        let data = await resp.json()\r\n        return data\r\n    }\r\n\r\n    static async setQuestions(body, vid, qid) {\r\n        let resp = await fetch(QuestionURL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            },\r\n            body: JSON.stringify({\r\n                body: body,\r\n                variable: vid,\r\n                questionnaire: qid,\r\n                user: JSON.parse(localStorage.getItem('id'))\r\n            })\r\n        })\r\n        let data = await resp.json()\r\n        return data\r\n    }\r\n\r\n    static async getQuestion(pk) {\r\n        let resp = await fetch(`${QuestionURL}${pk}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            }\r\n        })\r\n        let data = await resp.json()\r\n        return data\r\n    }\r\n\r\n    static async updateQuestion(body, id, vid, qid) {\r\n        let resp = await fetch(`${QuestionURL}${id}`,{\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            },\r\n            body: JSON.stringify({\r\n                body: body,\r\n                user: JSON.parse(localStorage.getItem('id')),\r\n                variable: vid,\r\n                questionnaire: qid\r\n            })\r\n        })\r\n        let data = await resp.json()\r\n        return data\r\n    }\r\n\r\n    static async deleteQuestion(pk) {\r\n        await fetch(`${QuestionURL}${pk}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('access'))}`,\r\n                'Content-Type': 'application/json' \r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport { Auth, User }","import React from 'react'\r\nimport { Redirect, withRouter } from 'react-router-dom'\r\nimport { Auth, User } from './services'\r\nimport { RegisterURL } from './config'\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { history } = this.props\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            isLogged: false,\r\n            errors: '',\r\n            history: history\r\n        };\r\n    \r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        Auth.validateToken().then( isLogged => this.setState({isLogged: isLogged}))\r\n    }\r\n\r\n    redirect() {\r\n        if ( this.state.isLogged ) return <Redirect to={{pathname:'/home', state: {logged: true}}} /> \r\n    }\r\n\r\n    handleUsername(event) {\r\n        this.setState({username: event.target.value});\r\n    }\r\n      \r\n    handlePassword(event) {\r\n        this.setState({password: event.target.value});\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        Auth.login(this.state.username, this.state.password).then( logged => { \r\n            if (logged) { \r\n                User.getUserId().then( _ => this.setState({isLogged: true}) )\r\n            } else {\r\n                this.setState({errors: 'Not Valid Credentials'})\r\n            }\r\n        })\r\n        event.preventDefault()\r\n    }\r\n\r\n    displayErrors() {\r\n        if (this.state.errors !== '') {\r\n            return (\r\n                <div class=\"alert alert-danger\" role=\"alert\">\r\n                    {this.state.errors}\r\n                </div>)\r\n        }\r\n    }\r\n\r\n    register() {\r\n        window.location.href = RegisterURL\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className='home'>\r\n                <div className='jumpotron' style={{backgroundColor: '#e0e0d1', position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', padding: '4vw', borderRadius: '3px', width: '40vw', height: '60vh'}}>\r\n                    { this.redirect() }\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <label>Userame:</label>\r\n                            <input className='form-control' type=\"text\" value={this.state.username} onChange={this.handleUsername} />\r\n                        </div>\r\n                        <br />\r\n                        <div className='form-group'>\r\n                            <label>\r\n                                Password:\r\n                            </label>\r\n                            <input className='form-control' type=\"password\" value={this.state.password} onChange={this.handlePassword} />\r\n                        </div>\r\n                        <br />\r\n                      <input className='btn btn-primary' type=\"submit\" value=\"Submit\" />\r\n                      <div style={{float: 'right'}}>\r\n                          <label>Or maybe -></label>\r\n                          <button className='btn btn-primary' onClick={this.register}>Register</button>\r\n                      </div>\r\n                    </form>\r\n                    {this.displayErrors()}\r\n                </div>\r\n            </div>\r\n        );  \r\n      }\r\n}\r\n\r\nexport default withRouter(Login)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Redirect, withRouter } from 'react-router-dom'\r\nimport { Auth } from './services'\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { history } = this.props\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            isLogged: false,\r\n            errors: '',\r\n            history: history\r\n        };\r\n    \r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        Auth.validateToken().then( isLogged => this.setState({isLogged: isLogged}))\r\n    }\r\n\r\n    redirect() {\r\n        if ( this.state.isLogged ) return <Redirect to={{pathname:'/home', state: {logged: true}}} /> \r\n    }\r\n\r\n    handleUsername(event) {\r\n        this.setState({username: event.target.value});\r\n    }\r\n      \r\n    handlePassword(event) {\r\n        this.setState({password: event.target.value});\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        Auth.login(this.state.username, this.state.password).then( logged => { \r\n            if (logged) { \r\n                this.setState({isLogged: true})\r\n                window.location.reload()\r\n            } else {\r\n                this.setState({errors: 'Not Valid Credentials'})\r\n            }\r\n        })\r\n        event.preventDefault()\r\n    }\r\n\r\n    displayErrors() {\r\n        if (this.state.errors !== '') {\r\n            return (\r\n                <div class=\"alert alert-danger\" role=\"alert\">\r\n                    {this.state.errors}\r\n                </div>)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className='home'>\r\n                <div className='jumpotron' style={{backgroundColor: '#e0e0d1', position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', padding: '4vw', borderRadius: '3px', width: '40vw', height: '60vh'}}>\r\n                    { this.redirect() }\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <label>Userame:</label>\r\n                            <input className='form-control' type=\"text\" value={this.state.username} onChange={this.handleUsername} />\r\n                        </div>\r\n                        <br />\r\n                        <div className='form-group'>\r\n                            <label>\r\n                                Password:\r\n                            </label>\r\n                            <input className='form-control' type=\"password\" value={this.state.password} onChange={this.handlePassword} />\r\n                        </div>\r\n                        <br />\r\n                      <input className='btn btn-primary' type=\"submit\" value=\"Submit\" />\r\n                      <div style={{float: 'right'}}>\r\n                          <label>Or maybe -></label>\r\n                          <button className='btn btn-primary'><Link style={{color: 'white'}} to='/register'>Register</Link></button>\r\n                      </div>\r\n                    </form>\r\n                    {this.displayErrors()}\r\n                </div>\r\n            </div>\r\n        );  \r\n      }\r\n}\r\n\r\nexport default withRouter(Register)","import React from 'react'\r\nimport './unauthhome.css'\r\n\r\nexport default class UnauthHome extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <div className='home'>\r\n                    <div className='body1'>\r\n                        <p>\r\n                            Make Questionnaires and let the data flow.\r\n                        </p>\r\n                    </div>\r\n                    <div className='body2'>\r\n                        <p>\r\n                            Use Machine Learning to draw safer conclusions.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Auth, User } from './services'\r\nimport { Redirect, Link, Switch, Route } from 'react-router-dom'\r\n\r\n\r\nclass NewQuestionnare extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            desc: '',\r\n            isLogged: true,\r\n            redir: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDesc = this.handleDesc.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleDesc(e) {\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        this.setState({desc: e.target.value})\r\n    }\r\n\r\n    handleChange(e) {\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        this.setState({name: e.target.value})\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        Auth.validateToken().then(data => this.setState({isLogged: data}))\r\n        if ( this.state.isLogged ) { User.setQuestionnaires(this.state.name, this.state.desc).then(data => console.log(data)) }\r\n        this.setState({redir: true})\r\n        window.location.reload()\r\n    }\r\n\r\n    redirect() {\r\n        if ( this.state.redir )\r\n            return <Redirect to='/accounts' />\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='card' style={{position: 'absolute', left: '20vw', width: '60vw', padding: '3rem', margin: '4rem'}}>\r\n                {this.redirect()}\r\n                <h5>New Questionnaire</h5>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className='form-group'>\r\n                        <label>Name:</label>\r\n                        <input className='form-control' style={{width: '40vw'}} type='text' value={this.state.name} onChange={this.handleChange} />\r\n                        <br />\r\n                        <label>Description:</label>\r\n                        <textarea className='form-control' style={{width: '40vw'}} type='textarea' value={this.state.desc} onChange={this.handleDesc}></textarea>\r\n                        <br />\r\n                        <input className='btn btn-primary' type='submit' />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass NewVariable extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            erros: '',\r\n            questionnaires: [],\r\n            option: 1,\r\n            isLogged: true,\r\n            redir: false\r\n        }\r\n        this.handleInput = this.handleInput.bind(this)\r\n        this.handleSelect = this.handleSelect.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        User.getQuestionnaires().then(data => {\r\n            if ( !(data.length === 0) ) {\r\n                this.setState({questionnaires: data, option: data[0].id})\r\n            }\r\n        })\r\n    }\r\n\r\n    handleInput(e) {\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        this.setState({name: e.target.value})\r\n    }\r\n\r\n    handleSelect(e) {\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        this.setState({option: e.target.value})\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        Auth.validateToken().then(data => this.setState({isLogged: data}))\r\n        if ( this.state.isLogged ) { User.setVariables(this.state.name, this.state.option).then( data => console.log(data)) }\r\n        this.setState({redir: true})\r\n        window.location.reload()\r\n    }\r\n\r\n    redirect() {\r\n        if ( this.state.redir )\r\n            return <Redirect to='/accounts' />\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='card' style={{position: 'absolute', left: '20vw', width: '60vw', padding: '3rem', margin: '4rem'}}>\r\n                {this.redirect()}\r\n                <h5>New Variable</h5>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className='form-group'>\r\n                        <label>Name:</label>\r\n                        <input className='form-control' style={{width: '40vw'}} type='text' value={this.state.name} onChange={this.handleInput} /><br/>\r\n                        <label>Select Questionnaire:</label>\r\n                        <br />\r\n                        <select className='custom-select' style={{width: '40vw'}} value={this.state.option} onChange={this.handleSelect}>\r\n                            {this.state.questionnaires.map( q =>\r\n                                <option value={q.id} key={q.id}>{q.name}</option>\r\n                            )}\r\n                        </select>\r\n                        <br />\r\n                        <input className='btn btn-primary' type='submit' />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass NewQuestion extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            qoption: 1,\r\n            voption: 1,\r\n            questionnaires: [],\r\n            variables: [],\r\n            isLogged: true,\r\n            redir: false\r\n        }\r\n        \r\n        this.handleInput = this.handleInput.bind(this)\r\n        this.handleQSelect = this.handleQSelect.bind(this)\r\n        this.handleVSelect = this.handleVSelect.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        User.getQuestionnaires().then(data => this.setState({\r\n            questionnaires: data, \r\n            qoption: data[0].id, \r\n            variables: data[0].variables, \r\n            voption: data[0].variables[0].id\r\n        }))\r\n    }\r\n\r\n    handleInput(e) {\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        this.setState({name: e.target.value})\r\n    }\r\n\r\n    handleQSelect(e) {\r\n        let qop = e.target.value\r\n        Auth.validateToken().then(logged => {\r\n            this.setState({isLogged: logged})\r\n            User.getQuestionnaire(qop).then(data => {\r\n                this.setState({variables: data.variables})\r\n                this.setState({qoption: qop, voption: this.state.variables[0].id})\r\n            })\r\n        })\r\n    }\r\n\r\n    handleVSelect(e) {\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        this.setState({voption: e.target.value})\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        Auth.validateToken().then(data => this.setState({isLogged: data}))\r\n        if ( this.state.isLogged ) {\r\n            console.log(this.state.voption, this.state.qoption)\r\n            User.setQuestions(this.state.name, this.state.voption, this.state.qoption).then( data => console.log(data)) \r\n        }\r\n        window.location.reload()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='card' style={{position: 'absolute', left: '20vw', width: '60vw', padding: '3rem', margin: '4rem'}}>\r\n                <h5>New Question</h5>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className='form-group'>\r\n                        <label>Body:</label>\r\n                        <input className='form-control' style={{width: '40vw'}} type='text' value={this.state.name} onChange={this.handleInput} />\r\n                        <br />\r\n                        <label>Select Variable:</label>\r\n                        <br />\r\n                        <select className='custom-select' style={{width: '40vw'}} value={this.state.voption} onChange={this.handleVSelect}>\r\n                            {this.state.variables.map( v =>\r\n                                <option value={v.id} key={v.id}>{v.name}</option> \r\n                            )}\r\n                        </select>\r\n                        <br />\r\n                        <label>Select Questionnaire:</label>\r\n                        <br />\r\n                        <select className='custom-select' style={{width: '40vw'}} value={this.state.qoption} onChange={this.handleQSelect}>\r\n                            {this.state.questionnaires.map( q =>\r\n                                <option value={q.id} key={q.id}>{q.name}</option> \r\n                            )}\r\n                        </select>\r\n                        <br />\r\n                        <input className='btn btn-primary' type='submit' />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Questionnaire extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.location.state.id,\r\n            name: '',\r\n            new_name: '',\r\n            desc: '',\r\n            new_desc: '',\r\n            variables: [],\r\n            questions: [],\r\n            isLogged: true\r\n        }\r\n\r\n        this.delQuest = this.delQuest.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleText = this.handleText.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        this.setState({id: props.location.state.id})\r\n        User.getQuestionnaire(props.location.state.id)\r\n        .then( data => {\r\n            this.setState({name: data.name, variables: data.variables, questions: data.questions, new_name: data.name, desc: data.desc, new_desc: data.desc})\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        User.getQuestionnaire(this.state.id)\r\n        .then( data => {\r\n            this.setState({name: data.name, variables: data.variables, questions: data.questions, new_name: data.name, desc: data.desc, new_desc: data.desc})\r\n        })\r\n    }\r\n\r\n    redirect() {\r\n        if ( !this.state.isLogged ) return <Redirect to='/' />\r\n    }\r\n\r\n    delQuest() {\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        User.deleteQuestionnaire(this.state.id)\r\n        window.location.reload()\r\n    }\r\n\r\n    handleText(e) {\r\n        this.setState({new_desc: e.target.value})\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({new_name: e.target.value})\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        User.updateQuestionnaire(this.state.new_name, this.state.new_desc, this.state.id).then(data => console.log(data))\r\n        window.location.reload()\r\n    }\r\n\r\n    render() {\r\n        const { name, variables, questions } = this.state\r\n        return (\r\n            <div className='card' style={{position: 'absolute', left: '20vw', width: '60vw', padding: '3rem', margin: '4rem'}}>\r\n                {this.redirect()}\r\n                <h3 className='card-title' style={{textAlign: 'center'}}>{name}</h3>\r\n                <p className='text-center'>{this.state.desc}</p>\r\n                <hr />\r\n                <div>\r\n                    <h5>Variables</h5>\r\n                    <ul className='list-group'>\r\n                        {variables.map( v =>\r\n                        <li className='list-group-item' style={{width: '30vw'}} key={v.id}><Link to={{pathname: `/accounts/var`, state: {id: v.id}}} replace >{v.name}</Link></li>\r\n                        )}\r\n                    </ul>\r\n                    <br />\r\n                    <h5>Questions</h5>\r\n                    <ul className='list-group'>\r\n                        {questions.map( q =>\r\n                        <li style={{width: '30vw'}} className='list-group-item' key={q.id}>\r\n                            <Link to={{pathname: `/accounts/q`, state: {id: q.id}}} replace >{q.body}</Link>\r\n                        </li>\r\n                        )}\r\n                    </ul>\r\n                    <br />\r\n                    <button className='btn btn-danger' onClick={this.delQuest}>Delete</button> \r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <h5>Update the name</h5>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <label>Name:</label>\r\n                            <input className='form-control' style={{width: '40vw'}} type='text' value={this.state.new_name} onChange={this.handleChange} />\r\n                            <br />\r\n                            <label>Description:</label>\r\n                            <textarea className='form-control' style={{width: '40vw'}} type='text' value={this.state.new_desc} onChange={this.handleText}></textarea>\r\n                            <br />\r\n                            <input className='btn btn-primary' type='submit' />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Variable extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.location.state.id,\r\n            qid: 0,\r\n            name: '',\r\n            new_name: '',\r\n            questions: [],\r\n            qname: '',\r\n            isLogged: true\r\n        }\r\n\r\n        this.delVar = this.delVar.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        this.setState({id: props.location.state.id})\r\n        User.getVariable(props.location.state.id)\r\n        .then( data => {\r\n            this.setState({name: data.name, variables: data.variables, questions: data.questions, new_name: data.name, qid: data.questionnaire})\r\n            User.getQuestionnaire(this.state.qid).then(data => this.setState({qname: data.name}))\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        User.getVariable(this.state.id)\r\n        .then( data => {\r\n            this.setState({name: data.name, variables: data.variables, questions: data.questions, new_name: data.name, qid: data.questionnaire})\r\n            User.getQuestionnaire(this.state.qid).then(data => this.setState({qname: data.name}))\r\n        })\r\n    }\r\n\r\n    delVar() {\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        User.deleteVariable(this.state.id)\r\n        window.location.reload()\r\n    }\r\n\r\n    redirect() {\r\n        if ( !this.state.isLogged ) return <Redirect to='/' />\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({new_name: e.target.value})\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        User.updateVariable(this.state.new_name, this.state.id, this.state.qid).then(data => console.log(data))\r\n        window.location.reload()\r\n    }\r\n\r\n    render() {\r\n        const { name, questions } = this.state\r\n        return (\r\n            <div className='card' style={{position: 'absolute', left: '20vw', width: '60vw', padding: '3rem', margin: '2rem'}}>\r\n                <div>\r\n                    {this.redirect()}\r\n                    <h3 className='card-title' style={{textAlign: 'center'}}>{name}</h3>\r\n                    <hr />\r\n                    <h5>Questionnaire: <Link to={{pathname: `/accounts/quest`, state: {id: this.state.qid}}} replace >{this.state.qname}</Link></h5>\r\n                    <br />\r\n                    <h5>Questions</h5>\r\n                    <ul className='list-group'>\r\n                        {questions.map( q =>\r\n                            <li className='list-group-item' style={{width: '30vw'}} key={q.id}><Link to={{pathname: `/accounts/q`, state: {id: q.id}}} replace >{q.body}</Link></li>\r\n                        )}\r\n                    </ul>\r\n                    <br />\r\n                    <button className='btn btn-danger' onClick={this.delVar}>Delete</button>\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <h5>Update the name</h5>\r\n                    <form className='form-group' onSubmit={this.handleSubmit}>\r\n                        <label>Name:</label>\r\n                        <input className='form-control' style={{width: '40vw'}} type='text' value={this.state.new_name} onChange={this.handleChange} />\r\n                        <br />\r\n                        <input className='btn btn-primary' type='submit' />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Question extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.location.state.id,\r\n            vid: '',\r\n            qid: '',\r\n            body: '',\r\n            new_body: '',\r\n            qname: '',\r\n            vname: '',\r\n            isLogged: true,\r\n        }\r\n\r\n        this.delQuest = this.delQuest.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({id: props.location.state.id})\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        User.getQuestion(props.location.state.id)\r\n        .then( data => {\r\n            this.setState({body: data.body, new_body: data.body, vid: data.variable, qid: data.questionnaire})\r\n            User.getQuestionnaire(this.state.qid).then(data => this.setState({qname: data.name}))\r\n            User.getVariable(this.state.vid).then(data => this.setState({vname: data.name}))\r\n        })\r\n    }\r\n\r\n    componentDidMount() {        \r\n        this.setState({id: this.state.id})\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        User.getQuestion(this.state.id)\r\n        .then( data => {\r\n            this.setState({body: data.body, new_body: data.body, vid: data.variable, qid: data.questionnaire})\r\n            User.getQuestionnaire(this.state.qid).then(data => this.setState({qname: data.name}))\r\n            User.getVariable(this.state.vid).then(data => this.setState({vname: data.name}))\r\n        })\r\n    }\r\n\r\n    delQuest() {\r\n        Auth.validateToken().then(logged => this.setState({isLogged: logged}))\r\n        User.deleteQuestion(this.state.id)\r\n        window.location.reload()\r\n    }\r\n\r\n    redirect() {\r\n        if ( !this.state.isLogged ) return <Redirect to='/' />\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({new_body: e.target.value})\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        User.updateQuestion(this.state.new_body, this.state.id, this.state.vid, this.state.qid)\r\n        window.location.reload()\r\n    }\r\n\r\n    render() {\r\n        const { body } = this.state\r\n        return (\r\n            <div className='card' style={{position: 'absolute', left: '25vw', width: '60vw', padding: '3rem', margin: '2rem'}}>\r\n                <div>\r\n                    {this.redirect()}\r\n                    <h3 className='card-title' style={{textAlign: 'center'}}>{body}</h3>\r\n                    <hr />\r\n                    <h5>Questionnaire: <Link to={{pathname: `/accounts/quest`, state: {id: this.state.qid}}} replace >{this.state.qname}</Link></h5>\r\n                    <h5>Variable: <Link to={{pathname: `/accounts/var`, state: {id: this.state.vid}}} replace >{this.state.vname}</Link></h5>\r\n                    <br />\r\n                    <button className='btn btn-danger' onClick={this.delQuest}>Delete</button>\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <h5>Update the Body</h5>\r\n                    <form className='form-group' onSubmit={this.handleSubmit}>\r\n                        <label>Body:</label>\r\n                        <input style={{width: '40vw'}} className='form-control' type='text' value={this.state.new_body} onChange={this.handleChange} />\r\n                        <br />\r\n                        <input className='btn btn-primary' type='submit' />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class Accounts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            questionnaires: [],\r\n            variables: [],\r\n            questions: [],\r\n            isLogged: false,\r\n            isLoaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Auth.validateToken().then(logged => {\r\n            this.setState({isLogged: logged})\r\n            if ( logged ) {\r\n                User.getUserId().then( _ => {\r\n                    User.getQuestionnaires().then(data => {\r\n                        this.setState({questionnaires: data})\r\n                        User.getVariables().then(data => {\r\n                            this.setState({variables: data})\r\n                            User.getQuestions().then(data => {\r\n                                this.setState({questions: data})\r\n                                this.setState({isLoaded: true})\r\n                            })\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    redirect() {\r\n        if ( !this.state.isLogged ) return <Redirect to='/' />\r\n    }\r\n\r\n    render() {\r\n        if ( this.state.isLoaded ) {\r\n            return (\r\n                <div style={{position: 'absolute'}}>\r\n                    <div className='main' style={{width: '100vw', paddingTop: '15vh', marginLeft: '15vw'}}>\r\n                        {this.redirect()}\r\n                        <div className='jumbotron atr'>\r\n                            <h3>Questionnaires</h3>\r\n                            <br />\r\n                            <div className='container'>\r\n                                <ul className='list-group'>\r\n                                    {this.state.questionnaires.map( quest => \r\n                                            <li className='list-group-item' key={quest.id}><Link to={{pathname: `/accounts/quest`, state: {id: quest.id}}} replace >{quest.name}</Link></li>\r\n                                    )}\r\n                                </ul>\r\n                                <br />\r\n                                <Link className='btn btn-primary' to={`/accounts/quest/new`}>New Questionnare</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className='jumbotron atr'>\r\n                            <h3>Variables</h3>\r\n                            <br />\r\n                            <div className='container'>\r\n                                <ul className='list-group'>\r\n                                    {this.state.variables.map( v =>\r\n                                        <li className='list-group-item' key={v.id}><Link to={{pathname: `/accounts/var`, state: {id: v.id}}} replace >{v.name}</Link></li> \r\n                                    )}\r\n                                </ul>\r\n                                <br />\r\n                                <Link className='btn btn-primary' to={`/accounts/var/new`}>New Variable</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className='jumbotron atr'>\r\n                            <h3>Questions</h3>\r\n                            <br />\r\n                            <div className='container' >\r\n                                <ul className='list-group'>\r\n                                    {this.state.questions.map( q =>\r\n                                        <li className='list-group-item' key={q.id}><Link to={{pathname: `/accounts/q`, state: {id: q.id}}} replace >{q.body}</Link></li> \r\n                                    )}\r\n                                </ul>\r\n                                <br />\r\n                                <Link className='btn btn-primary' to={`/accounts/q/new`}>New Question</Link>\r\n                            </div>\r\n                        </div>\r\n                    <br />\r\n                    <br />\r\n                        <Switch>\r\n                            <Route path='/accounts/quest/new' component={NewQuestionnare} />\r\n                            <Route path='/accounts/quest' component={Questionnaire} />\r\n                            \r\n                            <Route path='/accounts/var/new' component={NewVariable} />\r\n                            <Route path='/accounts/var' component={Variable} />\r\n                            \r\n                            <Route path='/accounts/q/new' component={NewQuestion} />\r\n                            <Route path='/accounts/q' component={Question} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <div>loading...</div>\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport { Auth, User } from './services'\r\n\r\nimport { Link, Route, Switch, Redirect } from 'react-router-dom'\r\nimport './App.css'\r\n\r\n\r\nclass Stat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.location.state.id,\r\n            variablesId: [],\r\n            name: '',\r\n            variables: [],\r\n            questions: [],\r\n            from: 0,\r\n            to: 100,\r\n            genders: ['male', 'female', 'other']\r\n        }\r\n\r\n        this.fromChange = this.fromChange.bind(this)\r\n        this.toChange = this.toChange.bind(this)\r\n        this.genderChange = this.genderChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        Auth.validateToken().then(logged => {\r\n            this.setState({isLogged: logged})\r\n            if ( logged ) {\r\n                User.getQuestionnaire(this.state.id).then(data => {\r\n                    this.setState({name: data.name, variablesId: data.variables})\r\n                    for ( let v of this.state.variablesId ) {\r\n                        User.getVariable(v.id).then(data => {\r\n                            this.setState((state, props) => ({variables: state.variables.concat(data)}))\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            id: props.location.state.id,\r\n            variablesId: [],\r\n            name: '',\r\n            variables: [],\r\n            questions: []\r\n        })\r\n\r\n        Auth.validateToken().then(logged => {\r\n            this.setState({isLogged: logged})\r\n            if ( logged ) {\r\n                User.getQuestionnaire(props.location.state.id).then(data => {\r\n                    this.setState({name: data.name, variablesId: data.variables})\r\n                    for ( let v of this.state.variablesId ) {\r\n                        User.getVariable(v.id).then(data => {\r\n                            this.setState((state, props) => ({variables: state.variables.concat(data)})) \r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    getMean(q) {\r\n        let sum = 0;\r\n        let count = 0\r\n        for ( let a of q.answers ) {\r\n            if ( a.age > this.state.from && a.age < this.state.to && this.state.genders.includes(a.gender) ) {\r\n                sum += a.answer\r\n                count++\r\n            }\r\n        }\r\n\r\n        return <div>{isNaN(sum/count) ? 0: JSON.stringify((sum/count)).slice(0, 4)}</div>\r\n    }\r\n\r\n    getStd(q) {\r\n        let mean = 0\r\n        let sum = 0\r\n        let count = 0\r\n\r\n        for ( let a of q.answers ) {\r\n            if ( a.age > this.state.from && a.age < this.state.to && this.state.genders.includes(a.gender) ) {\r\n                sum += a.answer\r\n                count++\r\n            }\r\n        }\r\n\r\n        mean = sum/count\r\n        count = 0\r\n        sum = 0\r\n\r\n        for ( let a of q.answers ) {\r\n            if ( a.age > this.state.from && a.age < this.state.to && this.state.genders.includes(a.gender) ) {\r\n                sum += Math.pow(a.answer - mean, 2)\r\n                count++\r\n            }\r\n        }\r\n\r\n        return <div>{isNaN(sum/count) ? 0: JSON.stringify((sum/count)).slice(0, 4)}</div>\r\n    }\r\n\r\n    getAnswers(q) {\r\n        return q.answers.filter( a => a.age > this.state.from && a.age < this.state.to && this.state.genders.includes(a.gender) ).length\r\n    }\r\n\r\n    fromChange(e) {\r\n        this.setState({from: e.target.value})\r\n    }\r\n\r\n    toChange(e) {\r\n        console.log(this.state.genders)\r\n        this.setState({to: e.target.value})\r\n    }\r\n\r\n    genderChange(e) {\r\n        this.setState({genders: [...e.target.options].map( v => v.selected ? v.value : undefined )})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='stat'>\r\n                <h2 className='quest-title'>{this.state.name}</h2>\r\n                <div className='' style={{padding: '5vw'}}>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <label>Select ages: </label>\r\n                        <div className='form-inline'>\r\n                            <label>From:</label>\r\n                            <input style={{width: '15vw'}} className='form-control' type='number' min='0' value={this.state.from} onChange={this.fromChange} />\r\n                            <label>To:  </label>\r\n                            <input style={{width: '15vw'}} className='form-control' type='number' min={this.state.from} value={this.state.to} onChange={this.toChange} />\r\n                        </div>\r\n                        <br />\r\n                        <div className='form-inline'>\r\n                            <label>Select Gender:</label>\r\n                            <select multiple={true} className='custom-select col-sm-2' value={this.state.genders} onChange={this.genderChange}>\r\n                                <option value={'male'}>Male</option>\r\n                                <option value={'female'}>Female</option>\r\n                                <option value={'other'}>Other</option>\r\n                            </select>\r\n                        </div>\r\n                        <br />\r\n                    </form>\r\n                </div>\r\n                <div className='stat-general'>\r\n                    <div className='card-general text-center'>\r\n                        {this.state.variables.map( v =>\r\n                            <div>\r\n                                <h4>{v.name}</h4>\r\n                                <table className='table stat-table'>\r\n                                    <thead className='thead-light'>\r\n                                        <tr>\r\n                                            <th scope='col'>Question</th>\r\n                                            <th scope='col'>Answers</th>\r\n                                            <th scope='col'>Mean</th>\r\n                                            <th scope='col'>STD</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {v.questions.map((q) =>\r\n                                            <tr key={q.id}>\r\n                                                <td>{q.body}</td>\r\n                                                <td>{this.getAnswers(q)}</td>\r\n                                                <td>{this.getMean(q)}</td>\r\n                                                <td>{this.getStd(q)}</td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n                                </table>\r\n                                <br />\r\n                            </div>\r\n                        )}                    \r\n                        <button className='btn btn-primary'>Download Data</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class Stats extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: '',\r\n            questionnaires: [],\r\n            varibles: [],\r\n            questions: [],\r\n            answers: [],\r\n            logged: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Auth.validateToken().then(logged => {\r\n            this.setState({isLogged: logged})\r\n            if ( logged ) {\r\n                User.getQuestionnaire(this.state.id).then(data => {\r\n                    this.setState({questionnaires: data})\r\n                    let answers = []\r\n                    for ( let q of this.state.questionnaires ) {\r\n                        answers = answers.concat(q.answers)\r\n                    }\r\n                    this.setState({answers: answers})\r\n                })\r\n                User.getVariables().then(data => this.setState({varibles: data}))\r\n                User.getQuestions().then(data => this.setState({questions: data}))\r\n            }\r\n        })\r\n    }\r\n\r\n    redirect() {\r\n        if ( !this.state.logged ) { return <Redirect to='/' />}\r\n    }\r\n\r\n    render() {\r\n        const { questionnaires } = this.state\r\n        return (\r\n            <div className='container main-stats'>\r\n                {this.redirect()}\r\n                <div className='top-stat'>\r\n                    <div className='card-stat text-center'>\r\n                        <h4 className='stat-title'>Questionnaires</h4>\r\n                        <h3>{this.state.questionnaires.length}</h3>\r\n                    </div>\r\n                    <div className='card-stat text-center'>\r\n                        <h4 className='stat-title'>Questions</h4>\r\n                        <h3>{this.state.questions.length}</h3>\r\n                    </div>\r\n                    <div className='card-stat text-center'>\r\n                        <h4 className='stat-title'>Answers Given</h4>\r\n                        <h3>{this.state.answers.length}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className='questionnaires'>\r\n                    <ul className='list-q'>\r\n                        {questionnaires.map(q => \r\n                            <li className='q' key={q.id}>\r\n                                <div className='stat-quest card-body text-center'>\r\n                                    <h4 className='card-title'>{q.name}</h4>\r\n                                    <p>{q.desc}</p>\r\n                                    <button className='btn btn-primary card-btn'><Link to={{pathname: `/stats/results`, state: {id: q.id}}} >See the stats</Link></button>\r\n                                </div>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n                <Switch>\r\n                    <Route  path={'/stats/results'} component={Stat} />)}\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\nimport {BrowserRouter as Router, Route, Link, Switch, Redirect} from 'react-router-dom'\nimport './App.css'\n\nimport Home from './home'\nimport Questionnaires from './questionnaire'\nimport Login from './login'\nimport Register from './register'\nimport UnauthHome from './unauthhome'\nimport Accounts from './accounts'\nimport Stats from './stats'\nimport { Auth, User } from './services'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLogged: false,\n      username: ''\n    }\n\n    this.logout = this.logout.bind(this)\n  }\n\n  componentDidMount() {\n    console.log(';asldkfj')\n    Auth.validateToken().then( data => {\n      this.setState({isLogged: data})\n      if ( data ) {\n        User.getUserId().then( _ =>\n          this.setState({username: JSON.parse(localStorage.getItem('username'))})\n        )\n      }\n    })\n  }\n\n  componentWillReceiveProps() {\n    console.log('aaaaaaaaaaaaaa')\n    Auth.validateToken().then( data => {\n      this.setState({isLogged: data})\n      if ( data ) {\n        User.getUserId().then( _ =>\n          this.setState({username: JSON.parse(localStorage.getItem('username'))})\n        )\n      }\n    })\n  }\n\n  logout() {\n    Auth.logout()\n    this.setState({isLogged: false})\n  }\n\n  nav() {\n    if ( this.state.isLogged ) {\n      return (\n        <div>\n          <nav className='navbar navbar-dark fixed-top  flex-md-nowrap bg-dark p-3 shadow'>\n            <Link style={{fontSize: '3.5vh', color: 'white'}} to='/'>Psycology-Dimension</Link>\n            <span style={{fontSize: '1.5rem'}} className='badge badge-secondary'>{this.state.username}</span>\n            <button className='btn btn-secondary logout' onClick={this.logout}>Logout</button>\n          </nav>\n          <div className='container-fluid'>\n              <div className='row'>\n                <nav className='col-md-2 col-sm-2 bg-light sidebar'>\n                  <div className='sidebar-sticky'>\n                    <ul className='nav flex-column'>\n                      <li className='nav-item elems'><Link className='nav-link' to='/home'>Home</Link></li>\n                      <li className='nav-item elems'><Link className='nav-link' to='/accounts'>Account</Link></li>\n                      <li className='nav-item elems'><Link className='nav-link' to='/stats'>Statistics</Link></li>\n                    </ul>\n                  </div>\n                </nav>\n              </div>\n            </div>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <div>\n          <nav className='navbar navbar-dark fixed-top  flex-md-nowrap bg-dark p-3 shadow' style={{padding: '2vh'}}>\n            <Link style={{color: 'white', fontSize: '3.5vh'}} className='nav-link' to='/'>Psycology-Dimension</Link>\n              <ul className='nav'>\n                <li className='nav-item'><Link style={{color: 'white', fontSize: '3.5vh'}} className='nav-link' to='/'>Home</Link></li>\n                <li className='nav-item'><Link style={{color: 'white', fontSize: '3.5vh'}} className='nav-link' to='/questionnaires'>Questionnaires</Link></li>\n                <li className='nav-item'><Link style={{color: 'white', fontSize: '3.5vh'}} className='nav-link' to='/login'>Login</Link></li>\n              </ul>\n          </nav>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            {this.nav()}\n            <div>\n              <Switch>\n                <Route exact path='/' render={( _ ) => this.state.isLogged ? <Redirect to='/home' /> : <UnauthHome />} />\n                <Route exact path='/home' render={( _ ) => this.state.isLogged ? <Home /> : <Redirect to='/' />}/>\n                <Route path='/questionnaires' render={( _ ) => (!this.state.isLogged) ? <Questionnaires /> : <Redirect to='/home' />} />\n                <Route path='/login' render={( _ ) => this.state.isLogged ? <Redirect to='/accounts' /> : <Login />} />\n                <Route path='/register' render={( _ ) => this.state.isLogged ? <Redirect to='/accounts' /> : <Register />} />\n                <Route path='/accounts' render={( _ ) => (!this.state.isLogged) ? <Redirect to='/login' /> : <Accounts />} />\n                <Route path='/stats'  render={( _ ) => (!this.state.isLogged) ? <Redirect to='/login' /> : <Stats />} />\n              </Switch>\n              </div>\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}